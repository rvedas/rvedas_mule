<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	
	<flow name="rvedas_hello_worldFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/rvedas/hw" allowedMethods="GET" doc:name="HTTP" />

		<invoke name="track_hello_world_entry" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], hello_world_entry, 200, #[message.inboundProperties.client_id]" />

		<expression-component doc:name="xfm-25ms"><![CDATA[Thread.sleep(25);]]></expression-component>

		
		<invoke name="track_backend1_request" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], backend1_request, 200, #[message.inboundProperties.client_id]" />
		
		
		
		
		<http:request config-ref="Mock1_Service_HTTP_Request_Configuration"
			path="/rvedas/mock1" method="GET" doc:name="invoke_mock_service1">
			<http:request-builder>
				<http:header headerName="transaction_uuid"
					value="#[message.inboundProperties.transaction_uuid]" />
				<http:header headerName="client_id"
					value="#[message.inboundProperties.client_id]" />
			</http:request-builder>
		</http:request>
		
		
		
		<invoke name="track_backend1_response" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], backend1_response, 200, #[message.inboundProperties.client_id]" />
		
		
		<expression-component doc:name="xfm-25ms"><![CDATA[Thread.sleep(25);]]></expression-component>
		
		
		<invoke name="track_backend2_request" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], backend2_request, 200, #[message.inboundProperties.client_id]" />
		
		
		
		<http:request config-ref="Mock2_Service_HTTP_Request_Configuration"
			path="/rvedas/mock2" method="GET" doc:name="invoke_mock_service2">
			<http:request-builder>
				<http:header headerName="transaction_uuid"
					value="#[message.inboundProperties.transaction_uuid]" />
				<http:header headerName="client_id"
					value="#[message.inboundProperties.client_id]" />
			</http:request-builder>
		</http:request>
		
		
		
		<invoke name="track_backend2_response" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], backend2_response, 200, #[message.inboundProperties.client_id]" />
		
		
		<expression-component doc:name="xfm-25ms"><![CDATA[Thread.sleep(25);]]></expression-component>
		
		
		
		
		<invoke name="track_hello_world_exit" object-ref="Tracking"
			method="writeToRvedasLog"
			methodArguments="1001, hello_world, #[server.host], #[message.inboundProperties.transaction_uuid], #[server.dateTime.withTimeZone('UTC')], hello_world_exit, 200, #[message.inboundProperties.client_id]" />
		
		
	</flow>
</mule>

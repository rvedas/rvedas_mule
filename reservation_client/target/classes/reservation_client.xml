<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

	<amqp:connector name="AMQP_0_9_Connector"
		validateConnections="true" doc:name="AMQP-0-9 Connector" />

	<amqp:endpoint exchangeName="app_1_input_e" queueName="app_1_input_q"
		exchangeType="topic" exchangeDurable="true" name="AMQP_0_9"
		responseTimeout="10000" doc:name="AMQP-0-9" />
	
		
    <flow name="reservation_clientFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="${res.http.basepath}" allowedMethods="POST" doc:name="HTTP"/>
        <logger message="first payload received : #[message.payloadAs(String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="originalPayload" value="#[message.payload]" doc:name="Set Original Payload"/>
        <json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
        <set-variable variableName="hostName" value="#[server.host]" doc:name="Set Host Name"/>
        <set-variable variableName="uuid" value="#[payload.reservation_id]" doc:name="Set UUID"/>
        <set-variable variableName="startTime" value="#[server.dateTime]" doc:name="Set Start Time"/>
        <async doc:name="log start">
            <flow-ref name="log_start" doc:name="Flow Reference"/>
        </async>
        <logger message="uuid : #[flowVars.uuid]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[flowVars.originalPayload]" mimeType="application/json" doc:name="Set Rabbit Payload"/>
        <logger message="payload : #[message.payloadAs(String)]" level="INFO" doc:name="Logger"/>
        <expression-component doc:name="Expression"><![CDATA[Thread.sleep(100);]]></expression-component>
        <amqp:outbound-endpoint exchangeName="app_1_input_e" queueName="app_1_input_q" exchangeType="topic" exchangeDurable="true" responseTimeout="10000" connector-ref="AMQP_0_9_Connector" ref="AMQP_0_9" doc:name="AMQP-0-9"/>
    </flow>
    <sub-flow name="log_start">
        <dw:transform-message doc:name="build log message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "apiname": "reservation_client",
  "uuid": flowVars.uuid,
  "message": "client sending message to app_1_input_q",
  "status": 200,
  "timestamp": flowVars.startTime,
  "hostName": flowVars.hostName,
  "stepIdentifier": "RESERVATION_CLIENT",
  "additionalKeys": {
    "key1": "value1",
    "key2": "value2"
  }
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <until-successful maxRetries="3" doc:name="Until Successful" objectStore-ref="objectStore">
            <http:request config-ref="HTTP_Request_Configuration_elk" path="${elk.http.basepath}" method="POST" doc:name="HTTP">
                <http:request-builder>
                    <http:header headerName="Content-Type" value="application/json"/>
                </http:request-builder>
            </http:request>
        </until-successful>
        <logger message="#[message.inboundProperties.'http.status']" level="INFO" doc:name="Logger"/>
    </sub-flow>
</mule>
